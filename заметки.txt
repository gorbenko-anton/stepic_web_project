Задача проще чем выглядит и сводится к двум шагам

1. Изменить nginx.conf так чтобы он перенаправлял запросы , которые на идут на адреса 127.0.0.1/hello/ и 127.0.0.1:8080 , ﻿на адрес ﻿0.0.0.0:8080.

2. Создать файл /home/box/web/hello.py и реализовать в нем функцию на питоне, которая будет обрабатывать url входящего запроса и возвращать строку.

Когда эти два пункта выполнены, запускаем gunicorn через командную строку из папки web (test замените на имя вашей функции в файле hello.py):

gunicorn --bind='0.0.0.0:8080' hello:test

Никаких дополнительных конфигов для запуска gunicorn не требуется. По сути, весь пункт 3) задания сводится к одной этой команде.

Это все что требуется для прохождения задания. Удачи.


-------------------------------------
Пришлось потратить временя на конфиг gunicorn.
За основу берем конфиг /etc/gunicorn.d/wsgi.example

Нужно расскоментировать:

'mode': 'wsgi'
'working_dir' и указать в какой папке находится файл hello.py
'args': 'hello:func' - нужно изменить на своё. Формат такой hello - это название питон файла без расширения, ищется в 'working_dir', func - это название функции в этом файле, которую нужно запустить.
Также потребуется указать адрес и порт в bind, количество workers и timeout.
Gunicorn должен слушать все интерфейсы 0.0.0.0 и порт 8080

﻿Чтобы gunicorn использовал этот конфиг, его нужно перезапустить командой:

sudo service gunicorn restart

В конфинге nginx для префикса hello ﻿нужно проксироваться на адрес ﻿http://127.0.0.1:8080﻿ сам nginx должен работать на 80 порту и слушать все сетевые интерфейсы.

--------------------------------
CONFIG = {                                                                      
    # 'mode': 'wsgi',                                                           
    'working_dir': '/path/to/my/app',                                           
    # 'python': '/usr/bin/python',                                              
    'args': (                                                                   
        # '--bind=127.0.0.1:8000',                                              
        '--workers=16',                                                         
        '--timeout=60',                                                         
        'app.module',                                                           
    ),                                                                          
}                                                                               
~   